{
	"info": {
		"_postman_id": "00aec3c4-e9fc-47d5-87d8-ff45d3eb2543",
		"name": "Tools",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "add product details - incorrect body",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1d15acd-34d8-44e6-9a0d-08ef32565ef8",
						"exec": [
							"pm.test(\"response is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"     pm.response.to.be.error;",
							"     ",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Response message should exist\", function () {",
							"    var jsonData = pm.response.json();",
							"    var message = jsonData['error'];",
							"    pm.expect(message).to.eql('API Event body did not contain the product brand.');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "awsv4",
					"awsv4": [
						{
							"key": "secretKey",
							"value": "{{SecretKey}}",
							"type": "string"
						},
						{
							"key": "accessKey",
							"value": "{{AccessKey}}",
							"type": "string"
						},
						{
							"key": "service",
							"value": "",
							"type": "string"
						},
						{
							"key": "region",
							"value": "eu-west-1",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test User1\",\n    \"email\": \"test.user1@gmail.com\",\n    \"message\": \"A test message\"\n}"
				},
				"url": {
					"raw": "https://{{tools_url_id}}.execute-api.eu-west-1.amazonaws.com/{{env}}/tools/products/12345678",
					"protocol": "https",
					"host": [
						"{{tools_url_id}}",
						"execute-api",
						"eu-west-1",
						"amazonaws",
						"com"
					],
					"path": [
						"{{env}}",
						"tools",
						"products",
						"12345678"
					]
				},
				"description": "Create list"
			},
			"response": []
		},
		{
			"name": "add product details - missing product",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1d15acd-34d8-44e6-9a0d-08ef32565ef8",
						"exec": [
							"pm.test(\"response is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"     pm.response.to.be.error;",
							"     ",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Response message should exist\", function () {",
							"    var jsonData = pm.response.json();",
							"    var message = jsonData['error'];",
							"    pm.expect(message).to.eql('No product returned for the id 12345678.');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "awsv4",
					"awsv4": [
						{
							"key": "secretKey",
							"value": "{{SecretKey}}",
							"type": "string"
						},
						{
							"key": "accessKey",
							"value": "{{AccessKey}}",
							"type": "string"
						},
						{
							"key": "service",
							"value": "",
							"type": "string"
						},
						{
							"key": "region",
							"value": "eu-west-1",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"brand\": \"John Lewis\",\n    \"details\": \"John Lewis & Partners Safari Mobile\",\n    \"retailer\": \"John Lewis\",\n    \"imageUrl\": \"https://johnlewis.scene7.com/is/image/JohnLewis/237244063?$rsp-pdp-port-640$\"\n}"
				},
				"url": {
					"raw": "https://{{tools_url_id}}.execute-api.eu-west-1.amazonaws.com/{{env}}/tools/products/12345678",
					"protocol": "https",
					"host": [
						"{{tools_url_id}}",
						"execute-api",
						"eu-west-1",
						"amazonaws",
						"com"
					],
					"path": [
						"{{env}}",
						"tools",
						"products",
						"12345678"
					]
				},
				"description": "Create list"
			},
			"response": []
		},
		{
			"name": "add product details - notf-0010",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1d15acd-34d8-44e6-9a0d-08ef32565ef8",
						"exec": [
							"pm.test(\"Add variable for new List ID\", function() {",
							"    var jsonData = pm.response.json();",
							"    listId = jsonData[\"listId\"];",
							"    pm.environment.set(\"list_id\", listId);",
							"});",
							"",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Response message should be created\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['products_added']['brand']['S']).to.eql(\"John Lewis\");",
							"    pm.expect(jsonData['products_added']['details']['S']).to.eql(\"John Lewis & Partners Safari Mobile\");",
							"    pm.expect(jsonData['products_added']['retailer']['S']).to.eql(\"John Lewis\");",
							"    pm.expect(jsonData['products_added']['imageUrl']['S']).to.eql(\"https://johnlewis.scene7.com/is/image/JohnLewis/237244063?$rsp-pdp-port-640$\");",
							"    pm.expect(jsonData['products_added']['productUrl']['S']).to.eql(\"https://www.johnlewis.com/john-lewis-partners-safari-mobile/p3439165\");",
							"    ",
							"    pm.expect(jsonData['lists_notfound_deleted'].length).to.eql(2);",
							"    pm.expect(jsonData['lists_products_added'].length).to.eql(2);",
							"    ",
							"    pm.expect(jsonData['notfound_deleted']['brand']['S']).to.eql(\"John Lewis\");",
							"    pm.expect(jsonData['notfound_deleted']['details']['S']).to.eql(\"John Lewis & Partners Safari Mobile\");",
							"    pm.expect(jsonData['notfound_deleted']['productUrl']['S']).to.eql(\"https://www.johnlewis.com/john-lewis-partners-safari-mobile/p3439165\");",
							"});",
							"",
							"pm.test(\"Product IDs should match\", function () {",
							"    var jsonData = pm.response.json();",
							"    var products_added = jsonData['products_added']",
							"    var products_added_id = 'PRODUCT#' + products_added['productId']['S']",
							"    var lists_products_added = jsonData['lists_products_added'][0]",
							"    pm.expect(products_added_id).to.eql(lists_products_added['SK']['S']);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "awsv4",
					"awsv4": [
						{
							"key": "secretKey",
							"value": "{{SecretKey}}",
							"type": "string"
						},
						{
							"key": "accessKey",
							"value": "{{AccessKey}}",
							"type": "string"
						},
						{
							"key": "service",
							"value": "",
							"type": "string"
						},
						{
							"key": "region",
							"value": "eu-west-1",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"brand\": \"John Lewis\",\n    \"details\": \"John Lewis & Partners Safari Mobile\",\n    \"retailer\": \"John Lewis\",\n    \"imageUrl\": \"https://johnlewis.scene7.com/is/image/JohnLewis/237244063?$rsp-pdp-port-640$\"\n}"
				},
				"url": {
					"raw": "https://{{tools_url_id}}.execute-api.eu-west-1.amazonaws.com/{{env}}/tools/products/12345678-notf-0010-1234-abcdefghijkl",
					"protocol": "https",
					"host": [
						"{{tools_url_id}}",
						"execute-api",
						"eu-west-1",
						"amazonaws",
						"com"
					],
					"path": [
						"{{env}}",
						"tools",
						"products",
						"12345678-notf-0010-1234-abcdefghijkl"
					]
				},
				"description": "Create list"
			},
			"response": []
		},
		{
			"name": "add product details - random",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1d15acd-34d8-44e6-9a0d-08ef32565ef8",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "awsv4",
					"awsv4": [
						{
							"key": "secretKey",
							"value": "{{SecretKey}}",
							"type": "string"
						},
						{
							"key": "accessKey",
							"value": "{{AccessKey}}",
							"type": "string"
						},
						{
							"key": "service",
							"value": "",
							"type": "string"
						},
						{
							"key": "region",
							"value": "eu-west-1",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"brand\": \"Rightmove\",\n    \"details\": \"8 bedroom detached house for sale\",\n    \"retailer\": \"Rightmove\",\n    \"imageUrl\": \"https://media.rightmove.co.uk/dir/49k/48982/83477522/48982_LAC180037_IMG_01_0000_max_656x437.jpg\"\n}"
				},
				"url": {
					"raw": "https://{{tools_url_id}}.execute-api.eu-west-1.amazonaws.com/{{env}}/tools/products/c79755a2-ceb4-4671-810f-e89ff3c353b6",
					"protocol": "https",
					"host": [
						"{{tools_url_id}}",
						"execute-api",
						"eu-west-1",
						"amazonaws",
						"com"
					],
					"path": [
						"{{env}}",
						"tools",
						"products",
						"c79755a2-ceb4-4671-810f-e89ff3c353b6"
					]
				},
				"description": "Create list"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}